cargo-features = ["codegen-backend"]

[package]
name = "site"
version = "0.1.0"
edition = "2021"

[package.metadata.leptos]
site-root = "target/site"
site-pkg-dir = "pkg"
style-file = "style/tailwind_out.css"
# Assets source dir. All files found here will be copied and synchronized to site-root. //NB: The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
assets-dir = "public"

site-addr = "127.0.0.1:61156"
reload-port = 61157

# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"

#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"

env = "DEV" # "DEV" | "PROD"

bin-features = ["ssr"]
bin-default-features = false
lib-features = ["hydrate"]
lib-default-features = false

lib-profile-release = "wasm-release"

[package.metadata.cargo-all-features]
skip_feature_sets = [["ssr", "hydrate"]]

[dependencies]
color-eyre = "0.6.3"
derive-new = "0.7.0"
derive_more = { version = "2.0.1", features = ["from", "display", "deref", "deref_mut", "debug"] }
futures = "0.3.31"
leptos = { version = "^0.7", features = ["nightly", "islands"] }
leptos-routable = "^0.1"
leptos_meta = { version = "^0.7" }
leptos_router = { version = "^0.7.7", features = ["nightly"] }
serde = { version = "^1.0.219", features = ["derive"] }
v_utils = { version = "^2.6.2", features = ["cli"] } #ga: rm path
web-sys = "0.3.77"

# optional-hydrate {{{
console_error_panic_hook = { version = "^0.1", optional = true }
wasm-bindgen = { version = "^0.2.100", optional = true }
#,}}}

# optional-ssr {{{
axum = { version = "=0.7.9", optional = true }
chrono = { version = "^0.4.40", optional = true, features = ["serde"] }
chrono-tz = { version = "^0.10.1", optional = true }
clap = { version = "^4.5.32", features = ["derive"] }
leptos_axum = { version = "^0.7", optional = true }
plotly = { version = "^0.12.0", features = ["image", "kaleido"], optional = true }
reqwest = { version = "^0.12.14", optional = true }
serde_json = { version = "^1.0.140", optional = true }
serde_with = { version = "3.12.0", features = ["chrono"] }
tokio = { version = "^1", features = ["rt-multi-thread"], optional = true }
tracing = { version = "^0.1.41", optional = true }
v_exchanges = { version = "^0.6.7", features = ["binance", "bybit", "data"], optional = true } #ga: rm path
#,}}}

[features]
default = ["ssr", "hydrate"]
hydrate = [
    "leptos/hydrate",
    "dep:console_error_panic_hook",
    "dep:wasm-bindgen"
]
ssr = [
    "dep:serde_json",
    "dep:v_exchanges",
    "dep:axum",
    "dep:tokio",
    "dep:tracing",
    "dep:leptos_axum",
    "dep:reqwest",
    "dep:chrono",
    "dep:chrono-tz",
    "dep:plotly",
    "leptos/ssr",
    "leptos_meta/ssr",
    "leptos_router/ssr"
]

[lib]
crate-type = ["cdylib", "rlib"]

[profile.wasm-release]
inherits = "release"
opt-level = 'z'
lto = true
codegen-units = 1
panic = "abort"

[[example]]
name = "test"
path = "./examples/test.rs"
